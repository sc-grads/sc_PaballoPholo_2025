<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/3/2025 9:08:09 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-NTKM1UMO"
  DTS:CreatorName="LAPTOP-NTKM1UMO\PaballoPholo"
  DTS:DTSID="{C47F3C24-893B-41C1-9F6B-965C2D354C59}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="DataMigrationWithAuditErrorLog"
  DTS:PackageType="5"
  DTS:VersionBuild="222"
  DTS:VersionGUID="{2781DAB7-66C2-42AC-84F1-925C68B9AAFC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{CBE174B0-B73B-4B5E-9967-36D8E63BC000}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::var_filename]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\1_Itumeleng Monyai March Final.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{8DCCAC5F-1F8B-48FB-8227-1E3ADD304951}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\3_Itumeleng Monyai May Week 1.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 2]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{5B05E812-D142-4651-84C0-8A99F053000D}"
      DTS:ObjectName="Excel Connection Manager 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\3_Itumeleng Monyai May Week 1.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 3]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{033B08FC-0074-4917-A83C-630CB2FE08A7}"
      DTS:ObjectName="Excel Connection Manager 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\3_Itumeleng Monyai May Week 1.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 4]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{A02B17B4-E18E-496E-9522-A14D47E2B665}"
      DTS:ObjectName="Excel Connection Manager 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\3_Itumeleng Monyai May Week 1.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 5]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{05FC0A7C-736E-4972-8919-9EE6177B4149}"
      DTS:ObjectName="Excel Connection Manager 5">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::var_filename]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\1_Itumeleng Monyai March Final.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2DE08938-2318-4730-A6F3-2ABA5378DD6F}"
      DTS:ObjectName="LocalHost.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{2DE08938-2318-4730-A6F3-2ABA5378DD6F}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AA7FCE91-B364-4846-8482-1AF72208A3F4}"
      DTS:ObjectName="LocalHost.TimesheetDB 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{AA7FCE91-B364-4846-8482-1AF72208A3F4}LocalHost.TimesheetDB 1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 1 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BBB7363C-B30F-4E24-9516-996EAFF86241}"
      DTS:ObjectName="LocalHost.TimesheetDB 1 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{BBB7363C-B30F-4E24-9516-996EAFF86241}LocalHost.TimesheetDB 1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B4F74103-1B59-44FC-8BA0-FDF7EFDA836A}"
      DTS:ObjectName="LocalHost.TimesheetDB 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{B4F74103-1B59-44FC-8BA0-FDF7EFDA836A}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 3]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AAA6C139-5565-4208-AB57-F61F7DB5A702}"
      DTS:ObjectName="LocalHost.TimesheetDB 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{AAA6C139-5565-4208-AB57-F61F7DB5A702}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{816202F8-268C-4388-862C-CF2D3C46EAE8}"
      DTS:ObjectName="LocalHost.TimesheetDB 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{816202F8-268C-4388-862C-CF2D3C46EAE8}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimeSheets]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CD7DB566-5180-49C1-B139-F395F78BF26D}"
      DTS:ObjectName="LocalHost.TimeSheets">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimeSheets;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-TimesheetsDataExtraction-{CD7DB566-5180-49C1-B139-F395F78BF26D}LocalHost.TimeSheets;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3C81B32C-35DF-431C-B0CC-D653FAF8A7BA}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AuditID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F55E26AE-FD39-4B56-A8BC-D82D1DCE1D07}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="RIGHT(&#xA;  LEFT(@[User::var_filename], LEN(@[User::var_filename]) - FINDSTRING(REVERSE(@[User::var_filename]), &quot;\\&quot;, 1)),&#xA;  FINDSTRING(REVERSE(LEFT(@[User::var_filename], LEN(@[User::var_filename]) - FINDSTRING(REVERSE(@[User::var_filename]), &quot;\\&quot;, 1))), &quot;\\&quot;, 1) - 1&#xA;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultantName">
      <DTS:VariableValue
        DTS:DataType="8">Itumeleng</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A0BD485C-A09D-4D29-97F7-157300A8991A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Migrating Excel Timesheet Data to Database Table: &quot; + TOKEN(@[User::var_filename], &quot;\\&quot;, TOKENCOUNT(@[User::var_filename], &quot;\\&quot;))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Details">
      <DTS:VariableValue
        DTS:DataType="8">Migrating Excel Timesheet Data to Database Table: 1_Itumeleng Monyai March Final.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C161A49-8773-441A-8D0E-C45855F66388}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMsgOutput">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B801204C-3842-4CBF-867D-1E4393CC1B72}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FailedRows">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC3FEED6-E527-4EFE-9B83-2D664E381889}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\1_Itumeleng Monyai March Final.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8D4D982-39C3-4D1B-9296-AB233F9AFBC2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="TOKEN(TOKEN(@[User::var_filename], &quot;\\&quot;, TOKENCOUNT(@[User::var_filename], &quot;\\&quot;)), &quot;_&quot;, 1) == &quot;1&quot; ? &quot;March&quot; :&#xA;TOKEN(TOKEN(@[User::var_filename], &quot;\\&quot;, TOKENCOUNT(@[User::var_filename], &quot;\\&quot;)), &quot;_&quot;, 1) == &quot;2&quot; ? &quot;April&quot; :&#xA;TOKEN(TOKEN(@[User::var_filename], &quot;\\&quot;, TOKENCOUNT(@[User::var_filename], &quot;\\&quot;)), &quot;_&quot;, 1) == &quot;3&quot; ? &quot;May&quot; :&#xA;TOKEN(TOKEN(@[User::var_filename], &quot;\\&quot;, TOKENCOUNT(@[User::var_filename], &quot;\\&quot;)), &quot;_&quot;, 1) == &quot;4&quot; ? &quot;June&quot; :&#xA;&quot;Unknown&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Month">
      <DTS:VariableValue
        DTS:DataType="8">March</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC128F87-5CC9-4791-9EBB-D1A3A24F0D59}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PackageStatus">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A749E377-ADBC-4BE5-B1E2-EFD3B426906E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessedRows">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C11E1E9E-434C-490B-B597-B99DE289E2FD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TaskName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5C1D8FF3-B8AF-4724-9120-1DE8E3F68E2F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Timestamp">
      <DTS:VariableValue
        DTS:DataType="7">6/12/2025 3:50:13 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{598C497B-24E6-4441-A709-EE25FD93AA5B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Type">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B938B36-17C1-4F6E-81A0-72947AB64700}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="var_filename">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\PaballoPholo\Documents\Timesheets\Itumeleng\1_Itumeleng Monyai March Final.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{917983D6-BC7D-4FEF-9773-CD47FD1EA03D}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{9B78497A-C423-464B-BC46-E5A351CFCE67}"
        DTS:ObjectName="{9B78497A-C423-464B-BC46-E5A351CFCE67}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\PaballoPholo\Documents\Timesheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{BA0F7E82-81BB-444B-BECD-F645CF2758E9}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="Variable">
          <DTS:VariableValue
            DTS:DataType="8">ProcessedRows</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\AuditLog_After"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{719755CA-53AE-4D7C-AA2D-3F24ED4160B3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="AuditLog_After"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2DE08938-2318-4730-A6F3-2ABA5378DD6F}"
              SQLTask:SqlStatementSource="UPDATE [dbo].[AuditLog]&#xA;SET&#xA;    Timestamp = GETDATE(),&#xA;    EmployeeName = ?,&#xA;    Details = ?&#xA;OUTPUT INSERTED.AuditID, INSERTED.Timestamp, INSERTED.EmployeeName, INSERTED.Type, INSERTED.Month, INSERTED.Details&#xA;WHERE AuditID = ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="AuditID"
                SQLTask:DtsVariableName="User::AuditID" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Timestamp"
                SQLTask:DtsVariableName="User::Timestamp" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="EmployeeName"
                SQLTask:DtsVariableName="User::ConsultantName" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Type"
                SQLTask:DtsVariableName="User::Type" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Month"
                SQLTask:DtsVariableName="User::Month" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Details"
                SQLTask:DtsVariableName="User::Details" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ConsultantName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::Details"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::AuditID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\AuditLog_Before"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{98EAB5A6-B6A4-4BF2-86D9-AA9FA3111E33}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="AuditLog_Before"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="2">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBB7363C-B30F-4E24-9516-996EAFF86241}"
              SQLTask:SqlStatementSource="INSERT INTO [dbo].[AuditLog] (Timestamp, EmployeeName, Details, Type, Month)&#xA;OUTPUT INSERTED.AuditID, INSERTED.Timestamp, INSERTED.EmployeeName, &#xA;       INSERTED.Type, INSERTED.Month, INSERTED.Details&#xA;VALUES (GETDATE(), ?, ?, 'Timesheet', ?)"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="AuditID"
                SQLTask:DtsVariableName="User::AuditID" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Timestamp"
                SQLTask:DtsVariableName="User::Timestamp" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="EmployeeName"
                SQLTask:DtsVariableName="User::ConsultantName" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Type"
                SQLTask:DtsVariableName="User::Type" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Month"
                SQLTask:DtsVariableName="User::Month" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Details"
                SQLTask:DtsVariableName="User::Details" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ConsultantName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::Details"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::Month"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\ExtractTimesheetData"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{38B88A80-8C05-476A-8EFC-F8375B3DE5AB}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExtractTimesheetData"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="ClientID Fuzzy Lookup"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">1</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.Null"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Client_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ClientID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ClientName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_50_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Comments]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">ClientName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantName]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Comments]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Total Hours]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Total Hours]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Start Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of End Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Date]"
                          name="Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          name="D of Week">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          name="Description">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          name="Comments">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          name="Client">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          name="Client Project Name">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          name="Total Hours">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]"
                          name="Start Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]"
                          name="End Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          name="ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]"
                          dataType="dbDate"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]"
                          name="Copy of Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]"
                          name="Copy of Comments">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Comments]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Total Hours]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Total Hours]"
                          name="Copy of Total Hours">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Total Hours]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Start Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]"
                          name="Copy of End Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of End Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ClientID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ClientID]"
                          name="ClientID">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ClientID</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_Client]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;Client&quot;."
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_Client]"
                          name="_Similarity_Client">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="ClientIDLookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Inputs[Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Match Output].Columns[ClientID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Match Output].Columns[ClientID]"
                          name="ClientID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Inputs[Conditional Split Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Inputs[Conditional Split Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Case 1]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      exclusionGroup="1"
                      name="Case 1"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">![ISNULL](#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]}) &amp;&amp; #{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]} != (DT_DBTIMESTAMP)"1899-12-30 00:00:00"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL(Date) &amp;&amp; [Total Hours] != (DT_DBTIMESTAMP)"1899-12-30 00:00:00"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="ConsultantID Fuzzy Lookup"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">1</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.Null"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Consultant_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Comments]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Total Hours]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output]"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Date]"
                          name="Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          name="D of Week">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          name="Description">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          name="Comments">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          name="Client">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          name="Client Project Name">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          name="Total Hours">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]"
                          name="Start Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]"
                          name="End Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          name="ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]"
                          dataType="dbDate"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]"
                          name="Copy of Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]"
                          name="Copy of Comments">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Total Hours]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Total Hours]"
                          name="Copy of Total Hours">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]"
                          name="Copy of End Time">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          name="ConsultantID">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantID</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;ConsultantName&quot;."
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          name="_Similarity_ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="ConsultantIDLookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Consultant]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Consultant]) [refTable]
where [refTable].[ConsultantName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ConsultantID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ConsultantName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Inputs[Lookup Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ConsultantName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Match Output].Columns[ConsultantID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Match Output].Columns[ConsultantID]"
                          name="ConsultantID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ConsultantID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ConsultantName"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="RedirectRow"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]"
                          name="ConsultantName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::ConsultantName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::ConsultantName]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]"
                          name="Copy of Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]"
                          name="Copy of Comments"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]"
                          name="Copy of Total Hours"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]"
                          name="Copy of Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          dataType="dbTime"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]"
                          name="Copy of End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="DataValidationLookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ClientID, ConsultantID, EntryDate
FROM Timesheet</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT ClientID, ConsultantID, EntryDate
FROM Timesheet) [refTable]
where [refTable].[EntryDate] = ? and [refTable].[ConsultantID] = ? and [refTable].[ClientID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ConsultantID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EntryDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Date]};#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantID]};#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ClientID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Date]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">EntryDate</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ConsultantID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input].Columns[ClientID]"
                          cachedDataType="i4"
                          cachedName="ClientID"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ClientID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Error Output"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Apr$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Sheet1$A8:Z]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          name="D of Week"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          name="Client Project Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          name="Total Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          dataType="wstr"
                          length="255"
                          name="D of Week" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          dataType="wstr"
                          length="255"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          name="Client Project Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          name="Billable or Non Billable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          dataType="date"
                          name="Total Hours" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          dataType="date"
                          name="Start Time" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          dataType="date"
                          name="End Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          name="End Time" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of End Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Total Hours]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Total Hours"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Total Hours]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client Project Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[D of Week]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntryDate]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Comments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                          cachedDataType="i4"
                          cachedName="ClientID"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ClientID]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                          dataType="i4"
                          name="TimesheetID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntryDate]"
                          dataType="dbDate"
                          name="EntryDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          dataType="nText"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientProjectName]"
                          dataType="wstr"
                          length="50"
                          name="ClientProjectName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          dataType="nText"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          dataType="wstr"
                          length="50"
                          name="Billable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="nText"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="dbTime2"
                          name="TotalHours"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="dbTime2"
                          name="StartTime"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="dbTime2"
                          name="EndTime"
                          scale="7" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination 1"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ErrorLog]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                          cachedDataType="wstr"
                          cachedLength="400"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0].Columns[ErrorDescription]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[SourceColumn]"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorID]"
                          dataType="i4"
                          name="ErrorID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDate]"
                          dataType="dbTimeStamp"
                          name="ErrorDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[SourceColumn]"
                          dataType="wstr"
                          length="100"
                          name="SourceColumn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorValue]"
                          dataType="wstr"
                          length="255"
                          name="ErrorValue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          dataType="wstr"
                          length="255"
                          name="ErrorDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[RowNumber]"
                          dataType="i4"
                          name="RowNumber" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2422c1d02578426c8d7380544a2a86f8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_2422c1d02578426c8d7380544a2a86f8")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        
        Row.ErrorDate = DateTime.Now;
    
        if (Row.ErrorCode != 0) // Check if an error occurred
        {
            // Set the ErrorDescription based on the error code and column
            Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
        }
        else
        {
            Row.ErrorDescription = "No error"; // Default value if no error
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime ErrorDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RowNumber
    {
        set
        {
            this[4] = value;
        }
    }
    public bool RowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2422c1d02578426c8d7380544a2a86f8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2422c1d02578426c8d7380544a2a86f8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2422c1d02578426c8d7380544a2a86f8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2422c1d02578426c8d7380544a2a86f8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2422c1d02578426c8d7380544a2a86f8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_2422c1d02578426c8d7380544a2a86f8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_2422c1d02578426c8d7380544a2a86f8</msb:DisplayName>
    <msb:ProjectId>{BBE25093-A34B-41BA-AE2B-D329B1A378D7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2422c1d02578426c8d7380544a2a86f8.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2422c1d02578426c8d7380544a2a86f8.Properties.Settings.get_Default():SC_2422c1d02578426c8d7380544a2a86f8.Properties.Sett" +
    "ings")]

namespace SC_2422c1d02578426c8d7380544a2a86f8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2422c1d02578426c8d7380544a2a86f8.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c26af52d-177f-4543-928c-10cb8c4fa409}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2422c1d02578426c8d7380544a2a86f8</RootNamespace>
    <AssemblyName>SC_2422c1d02578426c8d7380544a2a86f8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_2422c1d02578426c8d7380544a2a86f8" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2422c1d02578426c8d7380544a2a86f8.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA/TS2gAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAbjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABw0AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
NAAAAAAAAEgAAAACAAUAPCIAACgRAAABAAAAAAAAAGQzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACireAygSAAAKbwwAAAYDbwgAAAYs
GAMCKBMAAAoDbwgAAAZvFAAACm8KAAAGKgNyAQAAcG8KAAAGKh4CKBIAAAYqKgIDBAUoFQAACipS
AnsWAAAKAnsXAAAKFpRvGAAACioiAhYoGQAACipSAnsWAAAKAnsXAAAKF5RvGAAACioiAhcoGQAA
CiomAhgDKBoAAAoqWgMsCAIYKBsAAAoqchMAAHBzHAAACno6AhkDjBEAAAEoGgAACipaAywIAhko
GwAACipyEwAAcHMcAAAKejoCGgOMHQAAASgaAAAKKloDLAgCGigbAAAKKnITAABwcxwAAAp6HgIo
HQAACioeAigeAAAKKn4CKB8AAAoCAnMWAAAGfQEAAAQCAnMXAAAGfQIAAAQqkgRysAAAcBpvIAAA
CiwVAgUCAyghAAAKDgRzBQAABm8UAAAGKkorBwIDbxUAAAYDbxAAAAYt8SoGKjoCKCIAAAoCA30D
AAAEKjoCKCIAAAoCA30EAAAEKh4CKCIAAAoqrn4FAAAELR5ywAAAcNAHAAACKCMAAApvJAAACnMl
AAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoJgAACioucx0AAAaABwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAFAGAAAjfgAAvAYAAFwHAAAjU3Ry
aW5ncwAAAAAYDgAANAEAACNVUwBMDwAAEAAAACNHVUlEAAAAXA8AAMwBAAAjQmxvYgAAAAAAAAAC
AAABVxWgAQkBAAAA+gEzABYAAAEAAAAiAAAACAAAAAcAAAAeAAAAEwAAACYAAAAQAAAAAwAAAA0A
AAAOAAAAAQAAAAUAAAABAAAAAABHAwEAAAAAAAYAQQKMBQYA1QKMBQYAjQF5BQ8AAAYAAAYAugFK
BAYAJAJKBAYABQJKBAYAvAJKBAYAYQJKBAYAegJKBAYA0QFKBAYA7AEQAwoAlQLMAAoAIgXMAA4A
EwXMAAoAvATMAAYAwwDyAwoAxgbMAAYAiQbyAwYAcAF5BQYAMwWsBQYAsAQ1BBIAQAExAxIAoQEx
AxIAGgEgBAYAVQGMBRYAAQBDBQYAXATyAwYAHQDyAwYAKgPyAwYAnwTyAwYA7QDyAwYAlQDyAwYA
UwdKBAAAAABHAAAAAAABAAEAAQAQAAUEAAAQAAEAAQABABAABgUAADkAAQAFAAEAEACoBgAASQAB
ABIAAQAQAH0GAABNAAMAFgABABAAPgYAAE0ABAAXAAAAEACzBQ8GTQAFABgAAAEQAG0GDwZlAAcA
HAAGAH0GhgAGAD4GigABALYGjgABALYGjgARAPkDkgARAAoBlgARAHcAmgBQIAAAAADGAPMCBgAB
AFggAAAAAMYA/gIGAAEAYCAAAAAAxgAwB54AAQCYIAAAAACGGGwFBgACAKAgAAAAAIYYbAUqAAIA
qyAAAAAAhggQBKQABQDAIAAAAACGCJkDTAAFAMkgAAAAAIYIhwCkAAUA3iAAAAAAhghvA0wABQDn
IAAAAACGCHYEEAAFAPEgAAAAAIYIsAOoAAYACCEAAAAAhggyAa0ABwAXIQAAAACGCIQDqAAIAC4h
AAAAAIYI+AQBAAkAPSEAAAAAhgjMA6gACgBUIQAAAACGAEcHTAALAFwhAAAAAIYAkAZMAAsAZCEA
AAAAhhhsBQYACwCEIQAAAADGABsHswALAKkhAAAAAMYBFAeeAA8AvCEAAAAAxgEwB54AEAC+IQAA
AACGGGwFvQARAM0hAAAAAIYYbAW9ABIA3CEAAAAAgxhsBQYAEwDkIQAAAACTCC8FwwATABAiAAAA
AJMI8gDIABMAFyIAAAAAkwj+AM0AEwAfIgAAAACWCJwG0wAUACYiAAAAAIYYbAUGABQALiIAAAAA
kRhyBdgAFAAAAAEASwcAAAEAKAUAAAIASAYAAAMAygQAAAEACgMAAAEACgMAAAEACgMAAAEACgMA
AAEACgMAAAEACgMAAAEAUAAAAAIAuQAAAAMAKAUAAAQAygQAAAEAKAUAAAEASwcAAAEAzAYAAAEA
zAYAAAEACgMJAGwFAQARAGwFBgAZAGwFCgApAGwFEAAxAGwFEAA5AGwFEABBAGwFEABJAGwFEABR
AGwFEABZAGwFEABhAGwFEABpAGwFBgChAGwFBgDBAGwFFQDRAGwFBgCRAPMCBgCRAP4CBgCJACgH
GwCRAFgAIADZAIsEJQBxAGwFKgBxACgFNABxAEgGOAB5ABoAPABxANoDQQBxAOkDRgBxAOEDAQDh
AGwFEABxAEcHTABxAJAGTACRAGwFBgDxAHYGUACRAFwGVwCZAGwFBgABAacAXQABAU8HZgCpAGwF
bADJAGwFBgAuAAsA/AAuABMABQEuABsAJAEuACMALQEuACsAVgEuADMAVgEuADsAXAEuAEMALQEu
AEsAZAEuAFMAVgEuAFsAfQFDAGMAxwHhAHsAxwHjAGsAxwFpAXMAJAGJAXMAJAEDAAEABwALAAgA
DQAAABQE3AAAAJ0D4AAAAIsA3AAAAHMD4AAAAI4E5AAAALQD4AAAADYB6AAAAIgD4AAAAPwE3AAA
ANAD4AAAADMF7QAAABIB8gAAAKAG9wACAAYAAwACAAcABQACAAgABwACAAkACQABAAoACwABAAsA
DQABAAwADwABAA0AEQABAA4AEwABAA8AFQACABkAFwACABoAGQABABsAGQACABwAGwAEgAAAAQAA
AAAAAAAAAAAAAAAjAAAABAAAAAAAAAAAAAAAdABuAAAAAAAQAAAAAAAAAAAAAAB9ANYGAAAAABAA
AAAAAAAAAAAAAH0A8wYAAAAABAAAAAAAAAAAAAAAdADyAwAAAAAQAAAAAAAAAAAAAAB9ANQEAAAA
AAAAAAABAAAAvQUAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABHZXRJbnQzMgBTQ18yNDIy
YzFkMDI1Nzg0MjZjOGQ3MzgwNTQ0YTJhODZmOAA8TW9kdWxlPgBJbnB1dElEAGdldF9Db21wb25l
bnRNZXRhRGF0YQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAZ2V0X0Vycm9yQ29kZQBSdW50aW1l
VHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUARGF0ZVRpbWUATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAc2V0X0Vycm9yRGF0ZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
Q18yNDIyYzFkMDI1Nzg0MjZjOGQ3MzgwNTQ0YTJhODZmOC5kbGwAZ2V0X0Vycm9yQ29kZV9Jc051
bGwAc2V0X0Vycm9yRGF0ZV9Jc051bGwAZ2V0X0Vycm9yQ29sdW1uX0lzTnVsbABzZXRfRXJyb3JE
ZXNjcmlwdGlvbl9Jc051bGwAc2V0X1Jvd051bWJlcl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBT
eXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBnZXRfRXJyb3JDb2x1bW4AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9w
ZXJhdGlvbkV4Y2VwdGlvbgBzZXRfRXJyb3JEZXNjcmlwdGlvbgBHZXRFcnJvckRlc2NyaXB0aW9u
AFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAc2V0X1Jvd051bWJlcgBJbnB1dDBCdWZm
ZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTQ18yNDIyYzFkMDI1Nzg0MjZjOGQ3MzgwNTQ0YTJhODZmOC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMjQyMmMxZDAyNTc4NDI2YzhkNzM4MDU0NGEy
YTg2ZjguUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0
X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhv
c3QASW5wdXQwX1Byb2Nlc3NJbnB1dABnZXRfTm93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4
dFJvdwBnZXRfQXNzZW1ibHkAABFOAG8AIABlAHIAcgBvAHIAAICbSQBzAE4AdQBsAGwAIABwAHIA
bwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBl
AC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUA
bQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADIANAAyADIAYwAx
AGQAMAAyADUANwA4ADQAMgA2AGMAOABkADcAMwA4ADAANQA0ADQAYQAyAGEAOAA2AGYAOAAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAD/xP+gYr1mQJy/WbxYwIDC
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdBAAAEUUEIAASbQQgAQ4ICSADARI9HQgSQQMGEj0D
Bh0IBCABCAgEIAECCAUgAgEIHAMgAAIGIAICDhF9BSABHQgICAABEoCBEYCFBSAAEoCJByACAQ4S
gIkIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkkDBhJVAwYSWQMGEiAFIAEBEgwDIAAIBCAB
AQIFIAEBEUUJIAQBCA4SPRJBBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQMoAAgDKAAC
AygADgQoABFFBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTQ18yNDIyYzFkMDI1Nzg0MjZjOGQ3MzgwNTQ0YTJhODZmOAAA
BQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcE
AQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAABENAAAAAAAAAAAAABeNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
UDQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAPQDAAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAEMAXwAyADQAMgAyAGMAMQBkADAAMgA1ADcAOAA0ADIANgBjADgAZAA3ADMAOAAwADUA
NAA0AGEAMgBhADgANgBmADgAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADIANAAyADIA
YwAxAGQAMAAyADUANwA4ADQAMgA2AGMAOABkADcAMwA4ADAANQA0ADQAYQAyAGEAOAA2AGYAOAAu
AGQAbABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkA
ZwBoAHQAIABAACAASABQACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBh
AHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMA
QwBfADIANAAyADIAYwAxAGQAMAAyADUANwA4ADQAMgA2AGMAOABkADcAMwA4ADAANQA0ADQAYQAy
AGEAOAA2AGYAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMA
XwAyADQAMgAyAGMAMQBkADAAMgA1ADcAOAA0ADIANgBjADgAZAA3ADMAOAAwADUANAA0AGEAMgBh
ADgANgBmADgAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAu
ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABwNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_2422c1d02578426c8d7380544a2a86f8</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">58</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Inputs[Input 0].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Inputs[Input 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0].Columns[ErrorDescription]"
                          dataType="wstr"
                          length="400"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0].Columns[ErrorDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0].Columns[ErrorDate]"
                          name="ErrorDate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0].Columns[RowNumber]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0].Columns[RowNumber]"
                          name="RowNumber" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1]"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Copy of Total Hours]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantID]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[_Similarity]"
                          cachedDataType="r4"
                          cachedName="_Similarity"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[_Confidence]"
                          cachedDataType="r4"
                          cachedName="_Confidence"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Confidence]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1].Columns[_Similarity_ConsultantName]"
                          cachedDataType="r4"
                          cachedName="_Similarity_ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity_ConsultantName]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Copy of Total Hours]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Match Output].Columns[ConsultantID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantID]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 3]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantName]"
                          name="ConsultantName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Date]"
                          dataType="dbDate"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Date]"
                          name="Copy of Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Comments]"
                          name="Copy of Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Total Hours]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Total Hours]"
                          name="Copy of Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Start Time]"
                          name="Copy of Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of End Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of End Time]"
                          name="Copy of End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantID]"
                          name="ConsultantID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity]"
                          name="_Similarity" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Confidence]"
                          name="_Confidence" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity_ConsultantName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;ConsultantName&quot;."
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity_ConsultantName]"
                          name="_Similarity_ConsultantName" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All 1"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1]"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Copy of Total Hours]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Copy of End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[ConsultantID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantID]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[_Similarity]"
                          cachedDataType="r4"
                          cachedName="_Similarity"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Similarity]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[_Confidence]"
                          cachedDataType="r4"
                          cachedName="_Confidence"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Confidence]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Confidence]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[_Similarity_ConsultantName]"
                          cachedDataType="r4"
                          cachedName="_Similarity_ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[_Similarity_ConsultantName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Similarity_ConsultantName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1].Columns[ClientID]"
                          cachedDataType="i4"
                          cachedName="ClientID"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Match Output].Columns[ClientID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ClientID]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Copy of Date]"
                          cachedDataType="dbDate"
                          cachedName="Copy of Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Copy of Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Copy of Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Copy of Total Hours]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Copy of Start Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[Copy of End Time]"
                          cachedDataType="dbTime"
                          cachedName="Copy of End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[Copy of End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[ClientID]"
                          cachedDataType="i4"
                          cachedName="ClientID"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[ClientID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ClientID]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[_Similarity]"
                          cachedDataType="r4"
                          cachedName="_Similarity"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Similarity]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Similarity]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2].Columns[_Confidence]"
                          cachedDataType="r4"
                          cachedName="_Confidence"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output].Columns[_Confidence]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Confidence]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 3]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantName]"
                          name="ConsultantName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Date]"
                          dataType="dbDate"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Date]"
                          name="Copy of Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Comments]"
                          name="Copy of Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Total Hours]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Total Hours]"
                          name="Copy of Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Start Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of Start Time]"
                          name="Copy of Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of End Time]"
                          dataType="dbTime"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[Copy of End Time]"
                          name="Copy of End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ConsultantID]"
                          name="ConsultantID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Similarity]"
                          name="_Similarity" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Confidence]"
                          name="_Confidence" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Similarity_ConsultantName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;ConsultantName&quot;."
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[_Similarity_ConsultantName]"
                          name="_Similarity_ConsultantName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ClientID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1].Columns[ClientID]"
                          name="ClientID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All 2"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1]"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3]"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4]"
                      hasSideEffects="true"
                      name="Union All Input 4">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5]"
                      hasSideEffects="true"
                      name="Union All Input 5">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6]"
                      hasSideEffects="true"
                      name="Union All Input 6">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[D of Week]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Client Project Name]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output].Columns[ErrorCode]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 8]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 8">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorCode]"
                          name="ErrorCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[ErrorColumn]"
                          name="ErrorColumn" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1].Columns[End Time]"
                          name="End Time" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Case 1]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Case 1"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Case 1]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Conditional Split Error Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 3]"
                  name="Conditional Split Error Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Outputs[Conditional Split Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Data Conversion Error Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 4]"
                  name="Data Conversion Error Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Derived Column Error Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 2]"
                  name="Derived Column Error Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Excel Source Error Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 1]"
                  name="Excel Source Error Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Fuzzy Lookup Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 1]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Fuzzy Lookup Output1]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 2]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Outputs[Fuzzy Lookup Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Error Output1]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 6]"
                  name="Lookup Error Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Error Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Inputs[Union All Input 5]"
                  name="Lookup Error Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Inputs[Union All Input 2]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Match Output1]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Inputs[Union All Input 1]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup No Match Output2]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup No Match Output1]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup.Inputs[Fuzzy Lookup Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[OLE DB Destination Error Output]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Error Output.Inputs[Derived Column Input]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination.Outputs[OLE DB Destination Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Union All Output 1]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup.Inputs[Lookup Input]"
                  name="Union All Output 1"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Union All.Outputs[Union All Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Union All Output 12]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\Script Component.Inputs[Input 0]"
                  name="Union All Output 1"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2.Outputs[Union All Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Union All Output 11]"
                  endId="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup.Inputs[Lookup Input]"
                  name="Union All Output 1"
                  startId="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1.Outputs[Union All Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{F47CB920-14A8-4472-8878-FDFFFCAB010E}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="3">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5d7f8ce13d984d00b2e3c99463ed45b0"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::var_filename">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Settings.get_Default():ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Sett" +
    "ings")]

namespace ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_5d7f8ce13d984d00b2e3c99463ed45b0.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{363C0C16-D861-499A-B137-79D5A2514D16}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5d7f8ce13d984d00b2e3c99463ed45b0</RootNamespace>
    <AssemblyName>ST_5d7f8ce13d984d00b2e3c99463ed45b0</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5d7f8ce13d984d00b2e3c99463ed45b0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            MessageBox.Show(Dts.Variables["User::var_filename"].Value.ToString());

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_5d7f8ce13d984d00b2e3c99463ed45b0</msb:CodeName>
    <msb:DisplayName>ST_5d7f8ce13d984d00b2e3c99463ed45b0</msb:DisplayName>
    <msb:ProjectId>{C7E713D6-71B6-457D-94C5-978659D98516}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5d7f8ce13d984d00b2e3c99463ed45b0.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5d7f8ce13d984d00b2e3c99463ed45b0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_5d7f8ce13d984d00b2e3c99463ed45b0")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5d7f8ce13d984d00b2e3c99463ed45b0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIDpPmgAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAA7i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJwtAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LQAAAAAAAEgAAAACAAUA7CAAAPgLAAABAAAAAAAAAOQsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBUA
AAomAigQAAAKFm8WAAAKKh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnInAABw0AMAAAIoGQAACm8a
AAAKcxsAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoAD
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwDAAAjfgAASAQAAJAF
AAAjU3RyaW5ncwAAAADYCQAAnAAAACNVUwB0CgAAEAAAACNHVUlEAAAAhAoAAHQBAAAjQmxvYgAA
AAAAAAACAAABVx2gAQkDAAAA+gEzABYAAAEAAAAfAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
EAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAHUDAQAAAAAABgAlAkUEBgC0AkUEBgBx
ATIEDwC5BAAABgCeAfMDBgAIAvMDBgDpAfMDBgCbAvMDBgBFAvMDBgBeAvMDBgC1AfMDBgDQAeIC
CgB5AiQDCgDwACQDBgCtA6YDBgBUATIEBgBBBaYDBgAVBGUEBgAFBN4DDgAkAV8DDgCFAV8DDgAM
AckDBgA5AUUECgBNAyQDEgD7BJsAEgBuAJsAFgB1BQ4FFgBUBQ4FBgC7AKYDBgB3AKYDBgCEBfMD
AAAAACUAAAAAAAEAAQABABAAvgMBADkAAQABAAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwAD
AQAAMwUAAD0ABAAKABEAsgNoABEA4ABsABEAXgBwAAYGTQB0AFaAIwV3AFaAwAB3AFAgAAAAAIYA
xAMGAAEAgyAAAAAAhhglBAYAAQCLIAAAAACDGCUEBgABAJMgAAAAAJMIEQR7AAEAvyAAAAAAkwjI
AIAAAQDGIAAAAACTCNQAhQABAM4gAAAAAJYISAWLAAIA1SAAAAAAhhglBAYAAgDdIAAAAACRGCsE
kAACAAAAAQDcAgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQ
AFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEAJQQGAKkAJQQVALkAJQQGAHEAKwUbAMEA9wQgAMkA
nQMlANEA0gIrAIkA/AIvANkAcAUzAMEAYQUBAHEAJQQGAIkAJQQGAOkAiQA5AOkAgAVAAJEAJQRF
ALEAJQQGAAgAFABeAAgAGABjACkAcwDLAC4ACwCjAC4AEwCsAC4AGwDLAC4AIwDUAC4AKwD9AC4A
MwD9AC4AOwADAS4AQwDUAC4ASwALAS4AUwD9AC4AWwAkAUMAYwBjAEkAcwDLAGEAewBjAGMAawBj
AAMAAQAEAAMAAAAVBJQAAADoAJkAAABMBZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AABFJFBlAAAAAAAAAQAAAAQAAAAAAAAAAAAAAEwAVQAAAAAAEAAAAAAAAAAAAAAAVQAFAwAAAAAE
AAAAAAAAAAAAAABMAKYDAAAAABAAAAAAAAAAAAAAAFUALgAAAAAABAAAAAAAAAAAAAAATAAOBQAA
AAAAAAAAAQAAAHYEAAAFAAIAAAAAU1RfNWQ3ZjhjZTEzZDk4NGQwMGIyZTNjOTk0NjNlZDQ1YjAA
PE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIA
ZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81ZDdm
OGNlMTNkOTg0ZDAwYjJlM2M5OTQ2M2VkNDViMC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzVkN2Y4Y2UxM2Q5ODRkMDBiMmUzYzk5NDYzZWQ0NWIw
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF81ZDdmOGNl
MTNkOTg0ZDAwYjJlM2M5OTQ2M2VkNDViMC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGlu
Z3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AAAAAAAlVQBzAGUAcgA6ADoAdgBhAHIAXwBmAGkAbABlAG4AYQBtAGUA
AHFTAFQAXwA1AGQANwBmADgAYwBlADEAMwBkADkAOAA0AGQAMAAwAGIAMgBlADMAYwA5ADkANAA2
ADMAZQBkADQANQBiADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAAKN69WQkdMtNoqasWiizirkABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEIAASYQQgABJl
BSABEmkcAyAAHAMgAA4FAAERcQ4GAAESdRF5BCAAEn0GIAIBDhJ9CLd6XFYZNOCJCImEXc2AgMyR
BAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgA
EkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF81ZDdmOGNlMTNkOTg0ZDAwYjJlM2M5OTQ2M2VkNDViMAAABQEAAAAABwEAAkhQ
AAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyNQAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43
LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAxC0AAAAAAAAAAAAA3i0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAtAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAiBAAAAAAAAAAAAAAiBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAUGVFJAAAAQBQZUUkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEggMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAXgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAUwBUAF8ANQBkADcAZgA4AGMAZQAxADMAZAA5ADgANABkADAAMABiADIAZQAzAGMA
OQA5ADQANgAzAGUAZAA0ADUAYgAwAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADkAMgA4ADUALgAyADUAOQAzADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBUAF8ANQBkADcAZgA4AGMAZQAxADMAZAA5ADgANABkADAAMABiADIAZQAzAGMAOQA5
ADQANgAzAGUAZAA0ADUAYgAwAC4AZABsAGwAAABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABIAFAAIAAyADAAMgA1AAAAKgABAAEATABl
AGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANQBkADcAZgA4AGMAZQAxADMAZAA5ADgANABkADAAMABi
ADIAZQAzAGMAOQA5ADQANgAzAGUAZAA0ADUAYgAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAVABfADUAZAA3AGYAOABjAGUAMQAzAGQAOQA4ADQAZAAwADAAYgAy
AGUAMwBjADkAOQA0ADYAMwBlAGQANAA1AGIAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOQAyADgANQAuADIANQA5ADMANgAAAAAARgAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADgANQAuADIANQA5ADMANgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA8D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D2A5A5C5-0FCF-4062-ABCB-FB64474A25F8}"
          DTS:From="Package\Foreach Loop Container\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\ExtractTimesheetData" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{1F3831E8-6A63-446A-BC41-8C815A4CCDEE}"
          DTS:From="Package\Foreach Loop Container\AuditLog_Before"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\ExtractTimesheetData" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{4B6594D7-10D1-40E7-A198-AB31ADF7BA8C}"
          DTS:From="Package\Foreach Loop Container\ExtractTimesheetData"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\AuditLog_After" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E30B95A4-7028-4120-A098-56E4B727744E}"
          DTS:ObjectName="{E30B95A4-7028-4120-A098-56E4B727744E}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::var_filename" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container 1"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{FFB9C20A-DB8C-4336-9298-E71BC916F7E7}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container 1">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{6A789ED9-E8BF-4364-AB42-E5B2E5F8E1A1}"
        DTS:ObjectName="{CFFA6220-0D17-4A34-AD6E-10388E9E6BBE}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\PaballoPholo\Documents\Timesheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\AuditLog_After"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5446E8E6-8653-4ABA-A55D-8FC1C279BC3C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="AuditLog_After"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2DE08938-2318-4730-A6F3-2ABA5378DD6F}"
              SQLTask:SqlStatementSource="UPDATE [dbo].[AuditLog]&#xA;SET&#xA;    Timestamp = GETDATE(),&#xA;    EmployeeName = ?,&#xA;    Details = ?&#xA;OUTPUT INSERTED.AuditID, INSERTED.Timestamp, INSERTED.EmployeeName, INSERTED.Type, INSERTED.Month, INSERTED.Details&#xA;WHERE AuditID = ?"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="AuditID"
                SQLTask:DtsVariableName="User::AuditID" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Timestamp"
                SQLTask:DtsVariableName="User::Timestamp" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="EmployeeName"
                SQLTask:DtsVariableName="User::ConsultantName" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Type"
                SQLTask:DtsVariableName="User::Type" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Month"
                SQLTask:DtsVariableName="User::Month" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Details"
                SQLTask:DtsVariableName="User::Details" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ConsultantName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::Details"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::AuditID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="2"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\AuditLog_Before"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{DD82D298-DBFE-43B1-8390-D24872F2D51D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="AuditLog_Before"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BBB7363C-B30F-4E24-9516-996EAFF86241}"
              SQLTask:SqlStatementSource="INSERT INTO [dbo].[AuditLog] (Timestamp, EmployeeName, Details, Type, Month)&#xA;OUTPUT INSERTED.AuditID, INSERTED.Timestamp, INSERTED.EmployeeName, &#xA;       INSERTED.Type, INSERTED.Month, INSERTED.Details&#xA;VALUES (GETDATE(), ?, ?, 'Leave', ?)"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="AuditID"
                SQLTask:DtsVariableName="User::AuditID" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Timestamp"
                SQLTask:DtsVariableName="User::Timestamp" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="EmployeeName"
                SQLTask:DtsVariableName="User::ConsultantName" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Type"
                SQLTask:DtsVariableName="User::Type" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Month"
                SQLTask:DtsVariableName="User::Month" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Details"
                SQLTask:DtsVariableName="User::Details" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ConsultantName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::Details"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::Month"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\ExtractLeaveData"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{66F51F22-48F9-4928-9161-9CABFFBFB412}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExtractLeaveData"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Inputs[Conditional Split Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Inputs[Conditional Split Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Case 1]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="RedirectRow"
                      exclusionGroup="1"
                      name="Case 1"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">![ISNULL](#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}) &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL([Start Date]) &amp;&amp; !ISNULL([End Date])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="ConsultantID LookUp"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">1</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.Null"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Consultant_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input]"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input].Columns[Number of days ]"
                          cachedDataType="r8"
                          cachedName="Number of days "
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output]"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          name="Type of Leave">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          name="Start Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          name="End Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          name="Number of days">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          name="Approval Obtained">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          name="Sick Note">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          name="ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          name="ConsultantID">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;ConsultantName&quot;."
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          name="_Similarity_ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="ConsultantName"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Output].Columns[ConsultantName]"
                          name="ConsultantName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::ConsultantName]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::ConsultantName]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Inputs[Data Conversion Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Inputs[Data Conversion Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Start Date]"
                          name="Copy of Start Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of End Date]"
                          name="Copy of End Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="DataValidationLookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT LeaveTypeID, ConsultantID, StartDate, EndDate

FROM Leave</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT LeaveTypeID, ConsultantID, StartDate, EndDate

FROM Leave) [refTable]
where [refTable].[ConsultantID] = ? and [refTable].[LeaveTypeID] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="LeaveTypeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ConsultantID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="StartDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EndDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]};#{Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Match Output].Columns[LeaveTypeID]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Inputs[Lookup Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ConsultantID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Inputs[Lookup Input].Columns[LeaveTypeID]"
                          cachedDataType="i4"
                          cachedName="LeaveTypeID"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Match Output].Columns[LeaveTypeID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">LeaveTypeID</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Inputs[Derived Column Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Apr$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Leave$A10:Z]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 5]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 5]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          name="Type of Leave"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          name="Start Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          name="End Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          name="Number of days "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          name="Approval Obtained"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          name="Sick Note"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          dataType="wstr"
                          length="255"
                          name="Start Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          dataType="wstr"
                          length="255"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          dataType="r8"
                          name="Number of days " />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          name="Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          name="Sick Note" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          name="Type of Leave" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          name="Start Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          name="Number of days " />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          name="Approval Obtained" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          name="Sick Note" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="LeaveTypeID LookUp"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[LeaveType]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[LeaveType]) [refTable]
where [refTable].[LeaveTypeName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="LeaveTypeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LeaveTypeName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Inputs[Lookup Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">LeaveTypeName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Match Output].Columns[LeaveTypeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Match Output].Columns[LeaveTypeID]"
                          name="LeaveTypeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">LeaveTypeID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Leave]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LeaveTypeID]"
                          cachedDataType="i4"
                          cachedName="LeaveTypeID"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveTypeID]"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Match Output].Columns[LeaveTypeID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Start Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Start Date"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[End Date]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="End Date"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Number of days]"
                          cachedDataType="r8"
                          cachedName="Number of days"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Number of days]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          externalMetadataColumnId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                          dataType="i4"
                          name="LeaveID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveTypeID]"
                          dataType="i4"
                          name="LeaveTypeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          dataType="dbDate"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          dataType="dbDate"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="numeric"
                          name="NumberOfDays"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          dataType="wstr"
                          length="50"
                          name="ApprovalObtained" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Case 1]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Inputs[Data Conversion Input]"
                  name="Case 1"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Case 1]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Conditional Split Error Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1.Inputs[Derived Column Input]"
                  name="Conditional Split Error Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Outputs[Conditional Split Error Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Inputs[Fuzzy Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Fuzzy Lookup Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Inputs[Lookup Input]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp.Outputs[Fuzzy Lookup Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[OLE DB Destination Error Output]"
                  endId="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column.Inputs[Derived Column Input]"
                  name="OLE DB Destination Error Output"
                  startId="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination.Outputs[OLE DB Destination Error Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container 1\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{0B86DD07-BB7C-47CA-8884-91440A5849EF}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_e628249c8d7e41a5beb3470e3206a6df"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::var_filename">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Settings.get_Default():ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Sett" +
    "ings")]

namespace ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5d7f8ce13d984d00b2e3c99463ed45b0
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            MessageBox.Show(Dts.Variables["User::var_filename"].Value.ToString());

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_e628249c8d7e41a5beb3470e3206a6df.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{363C0C16-D861-499A-B137-79D5A2514D16}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_5d7f8ce13d984d00b2e3c99463ed45b0</RootNamespace><AssemblyName>ST_e628249c8d7e41a5beb3470e3206a6df</AssemblyName><TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_5d7f8ce13d984d00b2e3c99463ed45b0</msb:CodeName>
    <msb:DisplayName>ST_5d7f8ce13d984d00b2e3c99463ed45b0</msb:DisplayName>
    <msb:ProjectId>{C7E713D6-71B6-457D-94C5-978659D98516}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_e628249c8d7e41a5beb3470e3206a6df.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5d7f8ce13d984d00b2e3c99463ed45b0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_5d7f8ce13d984d00b2e3c99463ed45b0")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5d7f8ce13d984d00b2e3c99463ed45b0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5d7f8ce13d984d00b2e3c99463ed45b0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIDpPmgAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAA7i0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJwtAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
LQAAAAAAAEgAAAACAAUA7CAAAPgLAAABAAAAAAAAAOQsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBUA
AAomAigQAAAKFm8WAAAKKh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnInAABw0AMAAAIoGQAACm8a
AAAKcxsAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoAD
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwDAAAjfgAASAQAAJAF
AAAjU3RyaW5ncwAAAADYCQAAnAAAACNVUwB0CgAAEAAAACNHVUlEAAAAhAoAAHQBAAAjQmxvYgAA
AAAAAAACAAABVx2gAQkDAAAA+gEzABYAAAEAAAAfAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
EAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAHUDAQAAAAAABgAlAkUEBgC0AkUEBgBx
ATIEDwC5BAAABgCeAfMDBgAIAvMDBgDpAfMDBgCbAvMDBgBFAvMDBgBeAvMDBgC1AfMDBgDQAeIC
CgB5AiQDCgDwACQDBgCtA6YDBgBUATIEBgBBBaYDBgAVBGUEBgAFBN4DDgAkAV8DDgCFAV8DDgAM
AckDBgA5AUUECgBNAyQDEgD7BJsAEgBuAJsAFgB1BQ4FFgBUBQ4FBgC7AKYDBgB3AKYDBgCEBfMD
AAAAACUAAAAAAAEAAQABABAAvgMBADkAAQABAAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwAD
AQAAMwUAAD0ABAAKABEAsgNoABEA4ABsABEAXgBwAAYGTQB0AFaAIwV3AFaAwAB3AFAgAAAAAIYA
xAMGAAEAgyAAAAAAhhglBAYAAQCLIAAAAACDGCUEBgABAJMgAAAAAJMIEQR7AAEAvyAAAAAAkwjI
AIAAAQDGIAAAAACTCNQAhQABAM4gAAAAAJYISAWLAAIA1SAAAAAAhhglBAYAAgDdIAAAAACRGCsE
kAACAAAAAQDcAgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQ
AFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEAJQQGAKkAJQQVALkAJQQGAHEAKwUbAMEA9wQgAMkA
nQMlANEA0gIrAIkA/AIvANkAcAUzAMEAYQUBAHEAJQQGAIkAJQQGAOkAiQA5AOkAgAVAAJEAJQRF
ALEAJQQGAAgAFABeAAgAGABjACkAcwDLAC4ACwCjAC4AEwCsAC4AGwDLAC4AIwDUAC4AKwD9AC4A
MwD9AC4AOwADAS4AQwDUAC4ASwALAS4AUwD9AC4AWwAkAUMAYwBjAEkAcwDLAGEAewBjAGMAawBj
AAMAAQAEAAMAAAAVBJQAAADoAJkAAABMBZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AABFJFBlAAAAAAAAAQAAAAQAAAAAAAAAAAAAAEwAVQAAAAAAEAAAAAAAAAAAAAAAVQAFAwAAAAAE
AAAAAAAAAAAAAABMAKYDAAAAABAAAAAAAAAAAAAAAFUALgAAAAAABAAAAAAAAAAAAAAATAAOBQAA
AAAAAAAAAQAAAHYEAAAFAAIAAAAAU1RfNWQ3ZjhjZTEzZDk4NGQwMGIyZTNjOTk0NjNlZDQ1YjAA
PE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIA
ZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81ZDdm
OGNlMTNkOTg0ZDAwYjJlM2M5OTQ2M2VkNDViMC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzVkN2Y4Y2UxM2Q5ODRkMDBiMmUzYzk5NDYzZWQ0NWIw
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF81ZDdmOGNl
MTNkOTg0ZDAwYjJlM2M5OTQ2M2VkNDViMC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGlu
Z3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AAAAAAAlVQBzAGUAcgA6ADoAdgBhAHIAXwBmAGkAbABlAG4AYQBtAGUA
AHFTAFQAXwA1AGQANwBmADgAYwBlADEAMwBkADkAOAA0AGQAMAAwAGIAMgBlADMAYwA5ADkANAA2
ADMAZQBkADQANQBiADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAAKN69WQkdMtNoqasWiizirkABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEEIAASYQQgABJl
BSABEmkcAyAAHAMgAA4FAAERcQ4GAAESdRF5BCAAEn0GIAIBDhJ9CLd6XFYZNOCJCImEXc2AgMyR
BAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgA
EkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTVF81ZDdmOGNlMTNkOTg0ZDAwYjJlM2M5OTQ2M2VkNDViMAAABQEAAAAABwEAAkhQ
AAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyNQAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43
LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAAxC0AAAAAAAAAAAAA3i0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAtAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAiBAAAAAAAAAAAAAAiBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAUGVFJAAAAQBQZUUkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEggMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAXgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAUwBUAF8ANQBkADcAZgA4AGMAZQAxADMAZAA5ADgANABkADAAMABiADIAZQAzAGMA
OQA5ADQANgAzAGUAZAA0ADUAYgAwAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADkAMgA4ADUALgAyADUAOQAzADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBUAF8ANQBkADcAZgA4AGMAZQAxADMAZAA5ADgANABkADAAMABiADIAZQAzAGMAOQA5
ADQANgAzAGUAZAA0ADUAYgAwAC4AZABsAGwAAABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABIAFAAIAAyADAAMgA1AAAAKgABAAEATABl
AGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANQBkADcAZgA4AGMAZQAxADMAZAA5ADgANABkADAAMABi
ADIAZQAzAGMAOQA5ADQANgAzAGUAZAA0ADUAYgAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAVABfADUAZAA3AGYAOABjAGUAMQAzAGQAOQA4ADQAZAAwADAAYgAy
AGUAMwBjADkAOQA0ADYAMwBlAGQANAA1AGIAMAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOQAyADgANQAuADIANQA5ADMANgAAAAAARgAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADgANQAuADIANQA5ADMANgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAA8D0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D2028895-F3B6-4183-9E99-7866DF317B5D}"
          DTS:From="Package\Foreach Loop Container 1\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container 1\ExtractLeaveData" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{793901FC-D235-4BDB-B878-7F4FD20C2CAC}"
          DTS:From="Package\Foreach Loop Container 1\AuditLog_Before"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container 1\ExtractLeaveData" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{167D3F7C-729C-4EF1-876F-483EF7790248}"
          DTS:From="Package\Foreach Loop Container 1\ExtractLeaveData"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container 1\AuditLog_After" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{EB12821E-4854-4621-BDB4-D69B687C82AC}"
          DTS:ObjectName="{EB12821E-4854-4621-BDB4-D69B687C82AC}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::var_filename" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{47FFF524-CDF7-4700-B47B-F666FDE6DC38}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\ExtractClientData"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{DD34C412-9839-4F34-9163-31372FDAE21F}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExtractClientData"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\ExtractClientData\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM [Key$B2:B41]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractClientData\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 1]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\ExtractClientData\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output].Columns[F1]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractClientData\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\ExtractClientData\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\ExtractClientData\Lookup.Inputs[Lookup Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output].Columns[F1]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Sequence Container\ExtractClientData\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Sequence Container\ExtractClientData\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Sequence Container\ExtractClientData\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\ExtractClientData\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          externalMetadataColumnId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          lineageId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          dataType="wstr"
                          length="50"
                          name="ClientName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\ExtractClientData.Paths[Excel Source Output]"
                  endId="Package\Sequence Container\ExtractClientData\Lookup.Inputs[Lookup Input]"
                  name="Excel Source Output"
                  startId="Package\Sequence Container\ExtractClientData\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Sequence Container\ExtractClientData.Paths[Lookup No Match Output]"
                  endId="Package\Sequence Container\ExtractClientData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Sequence Container\ExtractClientData\Lookup.Outputs[Lookup No Match Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\ExtractConsulatantData"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{F1FEE653-CBA3-4117-A686-3D0EC02B76C9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExtractConsulatantData"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\ExtractConsulatantData\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">'Expense Claim$'</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM [Key$H2:H74]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 2]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output].Columns[Resource]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Resource]"
                          length="255"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output].Columns[Resource]"
                          name="Resource"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Resource]"
                          dataType="wstr"
                          length="255"
                          name="Resource" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Error Output].Columns[Resource]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Error Output].Columns[Resource]"
                          name="Resource" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\ExtractConsulatantData\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Consultant]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Consultant]) [refTable]
where [refTable].[ConsultantName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ConsultantID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ConsultantName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output].Columns[Resource]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Inputs[Lookup Input].Columns[Resource]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Resource"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output].Columns[Resource]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ConsultantName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Sequence Container\ExtractConsulatantData\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Sequence Container\ExtractConsulatantData\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Sequence Container\ExtractConsulatantData\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Consultant]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Resource]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Resource"
                          externalMetadataColumnId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantName]"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output].Columns[Resource]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantName]"
                          dataType="wstr"
                          length="100"
                          name="ConsultantName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\ExtractConsulatantData.Paths[Excel Source Output]"
                  endId="Package\Sequence Container\ExtractConsulatantData\Lookup.Inputs[Lookup Input]"
                  name="Excel Source Output"
                  startId="Package\Sequence Container\ExtractConsulatantData\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Sequence Container\ExtractConsulatantData.Paths[Lookup No Match Output]"
                  endId="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Sequence Container\ExtractConsulatantData\Lookup.Outputs[Lookup No Match Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\ExtractLeaveTypeData"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{12E30E37-A6B8-4B27-9239-2D8F2D2FAAE3}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="ExtractLeaveTypeData"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT *
FROM [Key$F2:F39]
WHERE Description LIKE '%Leave%'</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 3]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 3]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[LeaveType]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[LeaveType]) [refTable]
where [refTable].[LeaveTypeName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="LeaveTypeID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LeaveTypeName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output].Columns[Description]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Inputs[Lookup Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">LeaveTypeName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[LeaveType]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 3]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 3]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveTypeName]"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveTypeID]"
                          dataType="i4"
                          name="LeaveTypeID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveTypeName]"
                          dataType="wstr"
                          length="50"
                          name="LeaveTypeName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\ExtractLeaveTypeData.Paths[Excel Source Output]"
                  endId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Inputs[Lookup Input]"
                  name="Excel Source Output"
                  startId="Package\Sequence Container\ExtractLeaveTypeData\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Sequence Container\ExtractLeaveTypeData.Paths[Lookup No Match Output]"
                  endId="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup No Match Output"
                  startId="Package\Sequence Container\ExtractLeaveTypeData\Lookup.Outputs[Lookup No Match Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{67EED8ED-1009-4AEB-A687-02DAB4E662B5}"
          DTS:From="Package\Sequence Container\ExtractClientData"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\ExtractConsulatantData" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{CEDAA03D-A2ED-465E-8E47-9A4816379532}"
          DTS:From="Package\Sequence Container\ExtractConsulatantData"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Sequence Container\ExtractLeaveTypeData" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{45C40C9B-0C39-472F-86AD-37B4AC620939}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{950FD553-13EB-4244-9EFB-CD853FBB6F86}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Foreach Loop Container 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="147.2,41.6"
          Id="Package\Foreach Loop Container\AuditLog_After"
          TopLeft="164.233317716089,164.466664599511" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\AuditLog_Before"
          TopLeft="200.066649091575,12.5333324895964" />
        <NodeLayout
          Size="181.6,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData"
          TopLeft="79.2999856576332,93.6666637678285" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="51.0999793743104,16.5999984993537" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="116.29997937431,58.1999984993534">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53.8000062833229,35.4666652684751"
              Start="0,0"
              End="53.8000062833229,27.9666652684751">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.7333326342375" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.7333326342375"
                    Point2="0,17.7333326342375"
                    Point3="4,17.7333326342375" />
                  <mssgle:LineSegment
                    End="49.8000062833229,17.7333326342375" />
                  <mssgle:CubicBezierSegment
                    Point1="49.8000062833229,17.7333326342375"
                    Point2="53.8000062833229,17.7333326342375"
                    Point3="53.8000062833229,21.7333326342375" />
                  <mssgle:LineSegment
                    End="53.8000062833229,27.9666652684751" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="278.066649091575,54.1333324895964">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-79.0333301006087,39.5333312782325"
              Start="0,0"
              End="-79.0333301006087,32.0333312782325">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5128372056562" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.5128372056562"
                    Point2="0,23.5128372056562"
                    Point3="-4,23.5128372056562" />
                  <mssgle:LineSegment
                    End="-75.0333301006087,23.5128372056562" />
                  <mssgle:CubicBezierSegment
                    Point1="-75.0333301006087,23.5128372056562"
                    Point2="-79.0333301006087,23.5128372056562"
                    Point3="-79.0333301006087,27.5128372056562" />
                  <mssgle:LineSegment
                    End="-79.0333301006087,32.0333312782325" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="170.099985657633,135.266663767828">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.733332058456,29.2000008316826"
              Start="0,0"
              End="67.733332058456,21.7000008316826">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.6000004158412" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.6000004158412"
                    Point2="0,14.6000004158412"
                    Point3="4,14.6000004158412" />
                  <mssgle:LineSegment
                    End="63.733332058456,14.6000004158412" />
                  <mssgle:CubicBezierSegment
                    Point1="63.733332058456,14.6000004158412"
                    Point2="67.733332058456,14.6000004158412"
                    Point3="67.733332058456,18.6000004158412" />
                  <mssgle:LineSegment
                    End="67.733332058456,21.7000008316826" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="408,229.6"
          Size="408,272.8"
          Id="Package\Foreach Loop Container"
          TopLeft="121.666660019094,65.0333354908881" />
        <NodeLayout
          Size="147.2,41.6"
          Id="Package\Foreach Loop Container 1\AuditLog_After"
          TopLeft="161.366649501358,157.433332109915" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container 1\AuditLog_Before"
          TopLeft="197.199980876844,5.5" />
        <NodeLayout
          Size="160.8,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData"
          TopLeft="60.966653325989,95.7333310431914" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container 1\Script Task"
          TopLeft="32.7666470426661,18.6666657747163" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint]"
          TopLeft="97.9666470426661,60.2666657747163">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43.4000062833229,35.4666652684751"
              Start="0,0"
              End="43.4000062833229,27.9666652684751">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.7333326342375" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.7333326342375"
                    Point2="0,17.7333326342375"
                    Point3="4,17.7333326342375" />
                  <mssgle:LineSegment
                    End="39.4000062833229,17.7333326342375" />
                  <mssgle:CubicBezierSegment
                    Point1="39.4000062833229,17.7333326342375"
                    Point2="43.4000062833229,17.7333326342375"
                    Point3="43.4000062833229,21.7333326342375" />
                  <mssgle:LineSegment
                    End="43.4000062833229,27.9666652684751" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 1]"
          TopLeft="275.199980876844,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-108.366660884188,48.6333310431914"
              Start="0,0"
              End="-108.366660884188,41.1333310431914">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8925109547236" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.8925109547236"
                    Point2="0,28.8925109547236"
                    Point3="-4,28.8925109547236" />
                  <mssgle:LineSegment
                    End="-104.366660884188,28.8925109547236" />
                  <mssgle:CubicBezierSegment
                    Point1="-104.366660884188,28.8925109547236"
                    Point2="-108.366660884188,28.8925109547236"
                    Point3="-108.366660884188,32.8925109547236" />
                  <mssgle:LineSegment
                    End="-108.366660884188,41.1333310431914" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1.PrecedenceConstraints[Constraint 2]"
          TopLeft="221.766653325989,116.533331043191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13.1999961753686,40.9000010667236"
              Start="0,0"
              End="13.1999961753686,33.4000010667236">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="9.19999617536857,0" />
                  <mssgle:CubicBezierSegment
                    Point1="9.19999617536857,0"
                    Point2="13.1999961753686,0"
                    Point3="13.1999961753686,4" />
                  <mssgle:LineSegment
                    End="13.1999961753686,33.4000010667236" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="384,254.4"
          Size="384,297.6"
          Id="Package\Foreach Loop Container 1"
          TopLeft="152.499991667768,504.266663822068" />
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\Sequence Container\ExtractClientData"
          TopLeft="26.299961890282,37.5999997830391" />
        <NodeLayout
          Size="188,41.6"
          Id="Package\Sequence Container\ExtractConsulatantData"
          TopLeft="54.6332936755505,120.866662972305" />
        <NodeLayout
          Size="184,41.6"
          Id="Package\Sequence Container\ExtractLeaveTypeData"
          TopLeft="115.466623685097,203.199995733102" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="105.899961890282,79.1999997830391">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.7333317852685,41.6666631892659"
              Start="0,0"
              End="42.7333317852685,34.1666631892659">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8333315946329" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8333315946329"
                    Point2="0,20.8333315946329"
                    Point3="4,20.8333315946329" />
                  <mssgle:LineSegment
                    End="38.7333317852685,20.8333315946329" />
                  <mssgle:CubicBezierSegment
                    Point1="38.7333317852685,20.8333315946329"
                    Point2="42.7333317852685,20.8333315946329"
                    Point3="42.7333317852685,24.8333315946329" />
                  <mssgle:LineSegment
                    End="42.7333317852685,34.1666631892659" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="148.633293675551,162.466662972305">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.8333300095461,40.7333327607973"
              Start="0,0"
              End="58.8333300095461,33.2333327607973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3666663803987" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3666663803987"
                    Point2="0,20.3666663803987"
                    Point3="4,20.3666663803987" />
                  <mssgle:LineSegment
                    End="54.8333300095461,20.3666663803987" />
                  <mssgle:CubicBezierSegment
                    Point1="54.8333300095461,20.3666663803987"
                    Point2="58.8333300095461,20.3666663803987"
                    Point3="58.8333300095461,24.3666663803987" />
                  <mssgle:LineSegment
                    End="58.8333300095461,33.2333327607973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="374.4,260"
          Size="374.4,303.2"
          Id="Package\Sequence Container"
          TopLeft="657.499964075785,153.26666647984" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="657.499964075785,304.86666647984">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-127.833304056691,-103.433330988952"
              Start="0,0"
              End="-120.333304056691,-103.433330988952">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-59.9166520283454,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-59.9166520283454,0"
                    Point2="-63.9166520283454,0"
                    Point3="-63.9166520283454,-4" />
                  <mssgle:LineSegment
                    End="-63.9166520283454,-99.4333309889522" />
                  <mssgle:CubicBezierSegment
                    Point1="-63.9166520283454,-99.4333309889522"
                    Point2="-63.9166520283454,-103.433330988952"
                    Point3="-67.9166520283454,-103.433330988952" />
                  <mssgle:LineSegment
                    End="-120.333304056691,-103.433330988952" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="844.699964075785,456.46666647984">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-500.199972408017,47.799997342228"
              Start="0,0"
              End="-500.199972408017,40.299997342228">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.899998671114" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.899998671114"
                    Point2="0,23.899998671114"
                    Point3="-4,23.899998671114" />
                  <mssgle:LineSegment
                    End="-496.199972408017,23.899998671114" />
                  <mssgle:CubicBezierSegment
                    Point1="-496.199972408017,23.899998671114"
                    Point2="-500.199972408017,23.899998671114"
                    Point3="-500.199972408017,27.899998671114" />
                  <mssgle:LineSegment
                    End="-500.199972408017,40.299997342228" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source"
          TopLeft="70.8333327414261,76.8" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantName"
          TopLeft="265.833318808841,79.1999997107188" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup"
          TopLeft="684.16662928545,546.133331260151" />
        <NodeLayout
          Size="135.2,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Error Output"
          TopLeft="941.999958048266,676.199995346269" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Data Conversion"
          TopLeft="416.666647179259,166.133332778877" />
        <NodeLayout
          Size="120,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Union All"
          TopLeft="746.666625870601,278.399998625915" />
        <NodeLayout
          Size="128.8,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Union All 1"
          TopLeft="708.833322340416,456.199996647239" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination"
          TopLeft="682.499988141159,688.733328089383" />
        <NodeLayout
          Size="172.8,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup"
          TopLeft="644.166631470953,177.666665828956" />
        <NodeLayout
          Size="205.6,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantID Fuzzy Lookup"
          TopLeft="857.499953148267,183.933332616157" />
        <NodeLayout
          Size="149.6,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup"
          TopLeft="536.833324903415,358.999995782971" />
        <NodeLayout
          Size="183.2,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup"
          TopLeft="814.833315396474,362.399995589256" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Conditional Split"
          TopLeft="509.166638847028,84.3999996745586" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Union All Output 11]"
          TopLeft="773.699975812933,497.799996647239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.3333346129119"
              Start="0,0"
              End="0,40.8333346129119">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.8333346129119" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Union All Output 1]"
          TopLeft="806.666625870601,319.999998625915">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-195.033300967185,38.9999971570564"
              Start="0,0"
              End="-195.033300967185,31.4999971570564">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.4999985785282" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.4999985785282"
                    Point2="0,19.4999985785282"
                    Point3="-4,19.4999985785282" />
                  <mssgle:LineSegment
                    End="-191.033300967185,19.4999985785282" />
                  <mssgle:CubicBezierSegment
                    Point1="-191.033300967185,19.4999985785282"
                    Point2="-195.033300967185,19.4999985785282"
                    Point3="-195.033300967185,23.4999985785282" />
                  <mssgle:LineSegment
                    End="-195.033300967185,31.4999971570564" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[OLE DB Destination Error Output]"
          TopLeft="853.699988141159,709.533328089383">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88.299969907107,-12.5333327431142"
              Start="0,0"
              End="80.799969907107,-12.5333327431142">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.1499849535535,0" />
                  <mssgle:CubicBezierSegment
                    Point1="40.1499849535535,0"
                    Point2="44.1499849535535,0"
                    Point3="44.1499849535535,-4" />
                  <mssgle:LineSegment
                    End="44.1499849535535,-8.53333274311422" />
                  <mssgle:CubicBezierSegment
                    Point1="44.1499849535535,-8.53333274311422"
                    Point2="44.1499849535535,-12.5333327431142"
                    Point3="48.1499849535535,-12.5333327431142" />
                  <mssgle:LineSegment
                    End="80.799969907107,-12.5333327431142" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-29.0589212964465,1,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup No Match Output2]"
          TopLeft="771.133308713305,587.733331260151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,100.999996829232"
              Start="0,0"
              End="0,93.499996829232">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,93.499996829232" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,40.945310914616,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup No Match Output1]"
          TopLeft="686.433324903415,381.499995686114">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="128.399990493059,0"
              Start="0,0"
              End="120.899990493059,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="120.899990493059,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.6436085277795,5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup No Match Output]"
          TopLeft="816.966631470953,201.599999222557">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.5333216773139,0"
              Start="0,0"
              End="33.0333216773139,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.0333216773139,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.289725880093,5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Match Output1]"
          TopLeft="611.633324903415,400.599995782971">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="161.599997437,55.6000008642673"
              Start="0,0"
              End="161.599997437,48.1000008642673">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.8000004321336" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.8000004321336"
                    Point2="0,27.8000004321336"
                    Point3="4,27.8000004321336" />
                  <mssgle:LineSegment
                    End="157.599997437,27.8000004321336" />
                  <mssgle:CubicBezierSegment
                    Point1="157.599997437,27.8000004321336"
                    Point2="161.599997437,27.8000004321336"
                    Point3="161.599997437,31.8000004321336" />
                  <mssgle:LineSegment
                    End="161.599997437,48.1000008642673" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="32.60861199975,32.8000004321336,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Match Output]"
          TopLeft="730.566631470953,219.266665828956">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.4333277329811,59.1333327969581"
              Start="0,0"
              End="57.4333277329811,51.6333327969581">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0131575771462" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.0131575771462"
                    Point2="0,35.0131575771462"
                    Point3="4,35.0131575771462" />
                  <mssgle:LineSegment
                    End="53.4333277329811,35.0131575771462" />
                  <mssgle:CubicBezierSegment
                    Point1="53.4333277329811,35.0131575771462"
                    Point2="57.4333277329811,35.0131575771462"
                    Point3="57.4333277329811,39.0131575771462" />
                  <mssgle:LineSegment
                    End="57.4333277329811,51.6333327969581" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.4747228522595,40.0131575771462,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Fuzzy Lookup Output1]"
          TopLeft="906.433315396474,403.999995589256">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-113.066659722725,52.2000010579824"
              Start="0,0"
              End="-113.066659722725,44.7000010579824">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.935706148473" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.935706148473"
                    Point2="0,30.935706148473"
                    Point3="-4,30.935706148473" />
                  <mssgle:LineSegment
                    End="-109.066659722725,30.935706148473" />
                  <mssgle:CubicBezierSegment
                    Point1="-109.066659722725,30.935706148473"
                    Point2="-113.066659722725,30.935706148473"
                    Point3="-113.066659722725,34.935706148473" />
                  <mssgle:LineSegment
                    End="-113.066659722725,44.7000010579824" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Fuzzy Lookup Output]"
          TopLeft="960.299953148267,225.533332616157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-134.966660611,52.8666660097571"
              Start="0,0"
              End="-134.966660611,45.3666660097571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.3026311899877" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.3026311899877"
                    Point2="0,31.3026311899877"
                    Point3="-4,31.3026311899877" />
                  <mssgle:LineSegment
                    End="-130.966660611,31.3026311899877" />
                  <mssgle:CubicBezierSegment
                    Point1="-130.966660611,31.3026311899877"
                    Point2="-134.966660611,31.3026311899877"
                    Point3="-134.966660611,35.3026311899877" />
                  <mssgle:LineSegment
                    End="-134.966660611,45.3666660097571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Excel Source Output]"
          TopLeft="210.833332741426,98.7999998553594">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="54.9999860674149,0"
              Start="0,0"
              End="47.4999860674149,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.4999860674149,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Derived Column Output]"
          TopLeft="421.833318808841,102.599999692639">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.3333200381867,0"
              Start="0,0"
              End="79.8333200381867,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="79.8333200381867,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Data Conversion Output]"
          TopLeft="572.666647179259,186.933332778877">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71.499984291694,11.533333050079"
              Start="0,0"
              End="63.999984291694,11.533333050079">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.7499921458472,0" />
                  <mssgle:CubicBezierSegment
                    Point1="31.7499921458472,0"
                    Point2="35.7499921458472,0"
                    Point3="35.7499921458472,4" />
                  <mssgle:LineSegment
                    End="35.7499921458472,7.53333305007899" />
                  <mssgle:CubicBezierSegment
                    Point1="35.7499921458472,7.53333305007899"
                    Point2="35.7499921458472,11.533333050079"
                    Point3="39.7499921458472,11.533333050079" />
                  <mssgle:LineSegment
                    End="63.999984291694,11.533333050079" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Case 1]"
          TopLeft="585.966638847028,125.999999674559">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-91.2999916677685,40.1333331043188"
              Start="0,0"
              End="-91.2999916677685,32.6333331043188">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.0666665521594" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.0666665521594"
                    Point2="0,20.0666665521594"
                    Point3="-4,20.0666665521594" />
                  <mssgle:LineSegment
                    End="-87.2999916677685,20.0666665521594" />
                  <mssgle:CubicBezierSegment
                    Point1="-87.2999916677685,20.0666665521594"
                    Point2="-91.2999916677685,20.0666665521594"
                    Point3="-91.2999916677685,24.0666665521594" />
                  <mssgle:LineSegment
                    End="-91.2999916677685,32.6333331043188" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-60.8680817713842,25.0666665521594,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="128.8,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Union All 2"
          TopLeft="153.33332495557,602.399998770555" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Excel Source Error Output]"
          TopLeft="140.833332741426,118.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="33.7571350712866,483.999998770555"
              Start="0,0"
              End="33.7571350712866,476.499998770555">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,359.887924359183" />
                  <mssgle:CubicBezierSegment
                    Point1="0,359.887924359183"
                    Point2="0,363.887924359183"
                    Point3="4,363.887924359183" />
                  <mssgle:LineSegment
                    End="29.7571350712866,363.887924359183" />
                  <mssgle:CubicBezierSegment
                    Point1="29.7571350712866,363.887924359183"
                    Point2="33.7571350712866,363.887924359183"
                    Point3="33.7571350712866,367.887924359183" />
                  <mssgle:LineSegment
                    End="33.7571350712866,476.499998770555" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.9728191831067,368.887924359183,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Derived Column Error Output]"
          TopLeft="343.833318808841,120.799999710719">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-151.985708138985,481.599999059836"
              Start="0,0"
              End="-151.985708138985,474.099999059836">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,297.367684031336" />
                  <mssgle:CubicBezierSegment
                    Point1="0,297.367684031336"
                    Point2="0,301.367684031336"
                    Point3="-4,301.367684031336" />
                  <mssgle:LineSegment
                    End="-147.985708138985,301.367684031336" />
                  <mssgle:CubicBezierSegment
                    Point1="-147.985708138985,301.367684031336"
                    Point2="-151.985708138985,301.367684031336"
                    Point3="-151.985708138985,305.367684031336" />
                  <mssgle:LineSegment
                    End="-151.985708138985,474.099999059836" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-140.954240788243,306.367684031336,129.9227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Conditional Split Error Output]"
          TopLeft="561.699972180361,125.999999674559">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-335.33807579622,476.399999095996"
              Start="0,0"
              End="-335.33807579622,468.899999095996">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,206.233312991658" />
                  <mssgle:CubicBezierSegment
                    Point1="0,206.233312991658"
                    Point2="0,210.233312991658"
                    Point3="-4,210.233312991658" />
                  <mssgle:LineSegment
                    End="-331.33807579622,210.233312991658" />
                  <mssgle:CubicBezierSegment
                    Point1="-331.33807579622,210.233312991658"
                    Point2="-335.33807579622,210.233312991658"
                    Point3="-335.33807579622,214.233312991658" />
                  <mssgle:LineSegment
                    End="-335.33807579622,468.899999095996" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-233.36294414811,215.233312991658,131.3878125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Data Conversion Error Output]"
          TopLeft="494.666647179259,207.733332778877">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-285.561893652261,394.666665991678"
              Start="0,0"
              End="-285.561893652261,387.166665991678">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,207.502297942283" />
                  <mssgle:CubicBezierSegment
                    Point1="0,207.502297942283"
                    Point2="0,211.502297942283"
                    Point3="-4,211.502297942283" />
                  <mssgle:LineSegment
                    End="-281.561893652261,211.502297942283" />
                  <mssgle:CubicBezierSegment
                    Point1="-281.561893652261,211.502297942283"
                    Point2="-285.561893652261,211.502297942283"
                    Point3="-285.561893652261,215.502297942283" />
                  <mssgle:LineSegment
                    End="-285.561893652261,387.166665991678" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-208.86733354488,216.502297942283,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Error Output]"
          TopLeft="703.099964804286,219.266665828956">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-442.223782705859,383.133332941599"
              Start="0,0"
              End="-442.223782705859,375.633332941599">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,254.190370096363" />
                  <mssgle:CubicBezierSegment
                    Point1="0,254.190370096363"
                    Point2="0,258.190370096363"
                    Point3="-4,258.190370096363" />
                  <mssgle:LineSegment
                    End="-438.223782705859,258.190370096363" />
                  <mssgle:CubicBezierSegment
                    Point1="-438.223782705859,258.190370096363"
                    Point2="-442.223782705859,258.190370096363"
                    Point3="-442.223782705859,262.190370096363" />
                  <mssgle:LineSegment
                    End="-442.223782705859,375.633332941599" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-266.97827807168,263.190370096363,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Lookup Error Output1]"
          TopLeft="588.033324903415,400.599995782971">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-344.414285662131,201.800002987584"
              Start="0,0"
              End="-344.414285662131,194.300002987584">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,103.700730430483" />
                  <mssgle:CubicBezierSegment
                    Point1="0,103.700730430483"
                    Point2="0,107.700730430483"
                    Point3="-4,107.700730430483" />
                  <mssgle:LineSegment
                    End="-340.414285662131,107.700730430483" />
                  <mssgle:CubicBezierSegment
                    Point1="-340.414285662131,107.700730430483"
                    Point2="-344.414285662131,107.700730430483"
                    Point3="-344.414285662131,111.700730430483" />
                  <mssgle:LineSegment
                    End="-344.414285662131,194.300002987584" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-218.073529549815,112.700730430483,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\Script Component"
          TopLeft="199.999989072482,687.066665232314" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Union All Output 12]"
          TopLeft="217.73332495557,643.999998770555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.0666641169124,43.066666461759"
              Start="0,0"
              End="63.0666641169124,35.566666461759">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5333332308795" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5333332308795"
                    Point2="0,21.5333332308795"
                    Point3="4,21.5333332308795" />
                  <mssgle:LineSegment
                    End="59.0666641169124,21.5333332308795" />
                  <mssgle:CubicBezierSegment
                    Point1="59.0666641169124,21.5333332308795"
                    Point2="63.0666641169124,21.5333332308795"
                    Point3="63.0666641169124,25.5333332308795" />
                  <mssgle:LineSegment
                    End="63.0666641169124,35.566666461759" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,41.6"
          Id="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1"
          TopLeft="279.166651413673,766.799998011192" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\ExtractTimesheetData.Paths[Output 0]"
          TopLeft="280.799989072482,728.666665232314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="88.366662341191,38.1333327788778"
              Start="0,0"
              End="88.366662341191,30.6333327788778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.0666663894389" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.0666663894389"
                    Point2="0,19.0666663894389"
                    Point3="4,19.0666663894389" />
                  <mssgle:LineSegment
                    End="84.366662341191,19.0666663894389" />
                  <mssgle:CubicBezierSegment
                    Point1="84.366662341191,19.0666663894389"
                    Point2="88.366662341191,19.0666663894389"
                    Point3="88.366662341191,23.0666663894389" />
                  <mssgle:LineSegment
                    End="88.366662341191,30.6333327788778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData\DataValidationLookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData\ConsultantIDLookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData\ClientIDLookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData\ClientID Fuzzy Lookup">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container 1\ExtractLeaveData">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="176.8,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp"
          TopLeft="381.66664581332,175.733332272636" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantName"
          TopLeft="258.333322496878,62.8666674200032" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column"
          TopLeft="612.666636510029,416.333330246673" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\Derived Column 1"
          TopLeft="699.999961753688,57.1999996022383" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination"
          TopLeft="338.499981544913,403.266663531793" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source"
          TopLeft="60,60" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\Data Conversion"
          TopLeft="104.999997541308,164.066666009757" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\Conditional Split"
          TopLeft="464.166641305719,62.3999997107188" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp"
          TopLeft="266.666652096643,228.799998408953" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup"
          TopLeft="272.999996826053,320.933333182202" />
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[OLE DB Destination Error Output]"
          TopLeft="509.699981544913,424.066663531793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="102.966654965116,13.06666671488"
              Start="0,0"
              End="95.4666549651161,13.06666671488">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.4833274825581,0" />
                  <mssgle:CubicBezierSegment
                    Point1="47.4833274825581,0"
                    Point2="51.4833274825581,0"
                    Point3="51.4833274825581,4" />
                  <mssgle:LineSegment
                    End="51.4833274825581,9.06666671488" />
                  <mssgle:CubicBezierSegment
                    Point1="51.4833274825581,9.06666671488"
                    Point2="51.4833274825581,13.06666671488"
                    Point3="55.4833274825581,13.06666671488" />
                  <mssgle:LineSegment
                    End="95.4666549651161,13.06666671488" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-21.7255787674419,-17.43359375,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Lookup No Match Output]"
          TopLeft="362.999996826053,362.533333182202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.09998471886,40.7333303495913"
              Start="0,0"
              End="61.09998471886,33.2333303495913">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3666651747956" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3666651747956"
                    Point2="0,20.3666651747956"
                    Point3="4,20.3666651747956" />
                  <mssgle:LineSegment
                    End="57.09998471886,20.3666651747956" />
                  <mssgle:CubicBezierSegment
                    Point1="57.09998471886,20.3666651747956"
                    Point2="61.09998471886,20.3666651747956"
                    Point3="61.09998471886,24.3666651747956" />
                  <mssgle:LineSegment
                    End="61.09998471886,33.2333303495913" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.25639435932,25.3666651747956,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Lookup Match Output]"
          TopLeft="359.633324461348,270.399998408953">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.533334773249"
              Start="0,0"
              End="0,43.033334773249">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.033334773249" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,15.7119798866245,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Fuzzy Lookup Output]"
          TopLeft="381.66664581332,202.133332272636">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-25.3999937166773,26.6666661363174"
              Start="0,0"
              End="-25.3999937166773,19.1666661363174">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-21.3999937166773,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.3999937166773,0"
                    Point2="-25.3999937166773,0"
                    Point3="-25.3999937166773,4" />
                  <mssgle:LineSegment
                    End="-25.3999937166773,19.1666661363174" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Excel Source Output]"
          TopLeft="200,82.2333337100016">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.3333224968782,0"
              Start="0,0"
              End="50.8333224968782,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.8333224968782,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Derived Column Output]"
          TopLeft="414.333322496878,83.433333565361">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.8333188088413,0"
              Start="0,0"
              End="42.3333188088413,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="42.3333188088413,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Data Conversion Output]"
          TopLeft="260.999997541308,184.866666009757">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.666648272012,11.6666662628786"
              Start="0,0"
              End="113.166648272012,11.6666662628786">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="56.3333241360062,0" />
                  <mssgle:CubicBezierSegment
                    Point1="56.3333241360062,0"
                    Point2="60.3333241360062,0"
                    Point3="60.3333241360062,4" />
                  <mssgle:LineSegment
                    End="60.3333241360062,7.66666626287855" />
                  <mssgle:CubicBezierSegment
                    Point1="60.3333241360062,7.66666626287855"
                    Point2="60.3333241360062,11.6666662628786"
                    Point3="64.3333241360062,11.6666662628786" />
                  <mssgle:LineSegment
                    End="113.166648272012,11.6666662628786" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Conditional Split Error Output]"
          TopLeft="617.766641305719,80.5999996564786">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82.2333204479686,0"
              Start="0,0"
              End="74.7333204479686,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="74.7333204479686,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.3272460260157,5,131.3878125,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container 1\ExtractLeaveData.Paths[Case 1]"
          TopLeft="540.966641305719,103.999999710719">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-357.966643764411,60.0666662990382"
              Start="0,0"
              End="-357.966643764411,52.5666662990382">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0333331495191" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.0333331495191"
                    Point2="0,30.0333331495191"
                    Point3="-4,30.0333331495191" />
                  <mssgle:LineSegment
                    End="-353.966643764411,30.0333331495191" />
                  <mssgle:CubicBezierSegment
                    Point1="-353.966643764411,30.0333331495191"
                    Point2="-357.966643764411,30.0333331495191"
                    Point3="-357.966643764411,34.0333331495191" />
                  <mssgle:LineSegment
                    End="-357.966643764411,52.5666662990382" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-194.201407819706,35.0333331495191,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container 1\ExtractLeaveData\ConsultantID LookUp">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container 1\ExtractLeaveData\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container 1\ExtractLeaveData\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container 1\ExtractLeaveData\LeaveTypeID LookUp">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LeaveType]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container 1\ExtractLeaveData\DataValidationLookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\ExtractClientData">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\ExtractClientData\OLE DB Destination"
          TopLeft="378.333312662112,215.799998499354" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Sequence Container\ExtractClientData\Lookup"
          TopLeft="393.999994128942,132.999998018146" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Sequence Container\ExtractClientData\Excel Source"
          TopLeft="299.999983608723,51.1333329777585" />
        <EdgeLayout
          Id="Package\Sequence Container\ExtractClientData.Paths[Lookup No Match Output]"
          TopLeft="450.399994128942,174.599998018146">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13.5333185331696,41.2000004812084"
              Start="0,0"
              End="13.5333185331696,33.7000004812084">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.6000002406042" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.6000002406042"
                    Point2="0,20.6000002406042"
                    Point3="4,20.6000002406042" />
                  <mssgle:LineSegment
                    End="9.53331853316956,20.6000002406042" />
                  <mssgle:CubicBezierSegment
                    Point1="9.53331853316956,20.6000002406042"
                    Point2="13.5333185331696,20.6000002406042"
                    Point3="13.5333185331696,24.6000002406042" />
                  <mssgle:LineSegment
                    End="13.5333185331696,33.7000004812084" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-49.0397274521652,25.6000002406042,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\ExtractClientData.Paths[Excel Source Output]"
          TopLeft="369.999983608723,92.7333329777585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="80.4000105202194,40.2666650403871"
              Start="0,0"
              End="80.4000105202194,32.7666650403871">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.1333325201936" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.1333325201936"
                    Point2="0,20.1333325201936"
                    Point3="4,20.1333325201936" />
                  <mssgle:LineSegment
                    End="76.4000105202194,20.1333325201936" />
                  <mssgle:CubicBezierSegment
                    Point1="76.4000105202194,20.1333325201936"
                    Point2="80.4000105202194,20.1333325201936"
                    Point3="80.4000105202194,24.1333325201936" />
                  <mssgle:LineSegment
                    End="80.4000105202194,32.7666650403871" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\ExtractClientData\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\ExtractClientData\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Client]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\ExtractClientData\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\ExtractConsulatantData">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination"
          TopLeft="325.833315530586,188.066665358875" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Sequence Container\ExtractConsulatantData\Lookup"
          TopLeft="304.99998472631,105.666668100689" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Sequence Container\ExtractConsulatantData\Excel Source"
          TopLeft="269.999985247851,15.5999998915195" />
        <EdgeLayout
          Id="Package\Sequence Container\ExtractConsulatantData.Paths[Lookup No Match Output]"
          TopLeft="361.39998472631,147.266668100689">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="50.0333308042757,40.7999972581864"
              Start="0,0"
              End="50.0333308042757,33.2999972581864">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3999986290932" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.3999986290932"
                    Point2="0,20.3999986290932"
                    Point3="4,20.3999986290932" />
                  <mssgle:LineSegment
                    End="46.0333308042757,20.3999986290932" />
                  <mssgle:CubicBezierSegment
                    Point1="46.0333308042757,20.3999986290932"
                    Point2="50.0333308042757,20.3999986290932"
                    Point3="50.0333308042757,24.3999986290932" />
                  <mssgle:LineSegment
                    End="50.0333308042757,33.2999972581864" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.7897213166122,25.3999986290932,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\ExtractConsulatantData.Paths[Excel Source Output]"
          TopLeft="339.999985247851,57.1999998915195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.3999994784593,48.4666682091691"
              Start="0,0"
              End="21.3999994784593,40.9666682091691">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2333341045846" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2333341045846"
                    Point2="0,24.2333341045846"
                    Point3="4,24.2333341045846" />
                  <mssgle:LineSegment
                    End="17.3999994784593,24.2333341045846" />
                  <mssgle:CubicBezierSegment
                    Point1="17.3999994784593,24.2333341045846"
                    Point2="21.3999994784593,24.2333341045846"
                    Point3="21.3999994784593,28.2333341045846" />
                  <mssgle:LineSegment
                    End="21.3999994784593,40.9666682091691" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\ExtractConsulatantData\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\ExtractConsulatantData\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Consultant]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\ExtractLeaveTypeData">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination"
          TopLeft="363.33331387904,272.266664662097" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Sequence Container\ExtractLeaveTypeData\Lookup"
          TopLeft="320.999983494481,190.866667389009" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Sequence Container\ExtractLeaveTypeData\Excel Source"
          TopLeft="294.999983881911,102.266665955517" />
        <EdgeLayout
          Id="Package\Sequence Container\ExtractLeaveTypeData.Paths[Lookup No Match Output]"
          TopLeft="377.399983494481,232.466667389009">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71.5333303845595,39.7999972730875"
              Start="0,0"
              End="71.5333303845595,32.2999972730875">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8999986365438" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.8999986365438"
                    Point2="0,19.8999986365438"
                    Point3="4,19.8999986365438" />
                  <mssgle:LineSegment
                    End="67.5333303845595,19.8999986365438" />
                  <mssgle:CubicBezierSegment
                    Point1="67.5333303845595,19.8999986365438"
                    Point2="71.5333303845595,19.8999986365438"
                    Point3="71.5333303845595,23.8999986365438" />
                  <mssgle:LineSegment
                    End="71.5333303845595,32.2999972730875" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.0397215264703,24.8999986365438,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\ExtractLeaveTypeData.Paths[Excel Source Output]"
          TopLeft="364.999983881911,143.866665955517">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.3999996125698,47.0000014334922"
              Start="0,0"
              End="12.3999996125698,39.5000014334922">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5000007167461" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.5000007167461"
                    Point2="0,23.5000007167461"
                    Point3="4,23.5000007167461" />
                  <mssgle:LineSegment
                    End="8.39999961256979,23.5000007167461" />
                  <mssgle:CubicBezierSegment
                    Point1="8.39999961256979,23.5000007167461"
                    Point2="12.3999996125698,23.5000007167461"
                    Point3="12.3999996125698,27.5000007167461" />
                  <mssgle:LineSegment
                    End="12.3999996125698,39.5000014334922" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\ExtractLeaveTypeData\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\ExtractLeaveTypeData\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[LeaveType]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\ExtractTimesheetData\OLE DB Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>
# .github/actions/deploy-template/action.yml
name: Deploy Template

inputs:
  environment_name:
    description: 'Target environment (development/production)'
    required: true
  sql_server:
    description: 'SQL Server URL'
    required: true
  sql_password:
    description: 'SQL password'
    required: true
  display_name:
    description: 'Display name for the job'
    required: true

runs:
  using: "composite"
  steps:
    # Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Install SQL Server tools
    - name: Install SQL Server tools
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y curl gnupg
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get update
        sudo apt-get install -y mssql-tools unixodbc-dev
        echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
        source ~/.bashrc

    # Execute SQL Script with try/catch
    - name: Execute SQL Script
      shell: bash
      env:
        SQL_SERVER: ${{ inputs.sql_server }}
        SQL_USER: Auto_user
        SQL_PASSWORD: ${{ inputs.sql_password }}
        SQL_DATABASE: master
      run: |
        set -e  # Exit on error
        echo "Attempting to deploy to ${{ inputs.environment_name }}..."
        if ! /opt/mssql-tools/bin/sqlcmd -S $SQL_SERVER -U $SQL_USER -P $SQL_PASSWORD -d $SQL_DATABASE -i DatabaseAdministration/Project/scripts/setup_autodb.sql; then
          echo "ERROR: Failed to execute SQL script for ${{ inputs.environment_name }}"
          echo "::error::Deployment to ${{ inputs.environment_name }} failed"
          exit 1
        fi
        echo "Successfully deployed to ${{ inputs.environment_name }}"

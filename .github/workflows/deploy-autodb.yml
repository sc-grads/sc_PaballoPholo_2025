name: Deploy AutoDB Database

on:
  workflow_dispatch:  # Trigger manually via GitHub Actions UI

jobs:
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    environment: development  # Define development environment

    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install SQL Server tools (sqlcmd) on the runner
      - name: Install SQL Server tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      # Run the SQL script for development environment
      - name: Execute SQL Script (Development)
        env:
          SQL_SERVER: ${{ secrets.DEV_SQL_SERVER }}  # Pinggy URL for dev (your local machine)
          SQL_USER: Auto_user
          SQL_PASSWORD: ${{ secrets.DEV_SQL_PASSWORD }}  # Password for dev
          SQL_DATABASE: master
        run: |
          /opt/mssql-tools/bin/sqlcmd -S $SQL_SERVER -U $SQL_USER -P $SQL_PASSWORD -d $SQL_DATABASE -i DatabaseAdministration/Project/scripts/setup_autodb.sql

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-dev  # Runs only after deploy-dev succeeds
    environment: production  # Define production environment with approval
    if: github.event_name == 'push'  # Ensure it runs on push events

    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install SQL Server tools (sqlcmd) on the runner
      - name: Install SQL Server tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      # Run the SQL script for production environment
      - name: Execute SQL Script (Production)
        env:
          SQL_SERVER: ${{ secrets.PROD_SQL_SERVER }}  # Pinggy URL for prod (partnerâ€™s machine)
          SQL_USER: Auto_user
          SQL_PASSWORD: ${{ secrets.PROD_SQL_PASSWORD }}  # Password for prod
          SQL_DATABASE: master
        run: |
          /opt/mssql-tools/bin/sqlcmd -S $SQL_SERVER -U $SQL_USER -P $SQL_PASSWORD -d $SQL_DATABASE -i DatabaseAdministration/Project/scripts/setup_autodb.sql
